plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {

    // ----- BEGIN flavorDimensions (autogenerated by flutter_flavorizr) -----
    flavorDimensions += "flavor-type"

    productFlavors {
        dev {
            dimension "flavor-type"
            applicationId "com.movieadvisor.app.dev"
            resValue "string", "app_name", "Movie Advisor Dev"
        }
        prod {
            dimension "flavor-type"
            applicationId "com.movieadvisor.app"
            resValue "string", "app_name", "Movie Advisor"
        }
    }

    // ----- END flavorDimensions (autogenerated by flutter_flavorizr) -----

   namespace = "com.example.movie_advisor"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.movie_advisor"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.release
        }
    }
}

flutter {
    source = "../.."
}

// ********** THIS TEXT IS AN INSERTION MARKER FOR add_build_outputs_info AUTO-GENERATED CODE. ********** 
// ********** IMPORTANT! DO NOT MAKE CHANGES TO THIS TEXT! **********
apply from: './build_outputs_info.gradle'

afterEvaluate {
    android.applicationVariants.all { variant ->
        createCleanApkDirTask(variant)
        createCleanAabDirTask(variant)
        moveCreatedFileToFlutterApkDir(variant)
        renameAABFile(variant)
    }
}
// ********** END OF add_build_outputs_info AUTO-GENERATED CODE. **********  
// ********** IMPORTANT! DO NOT ADD CODE AFTER THIS BLOCK! ********** 
// ********** ANY ADDITIONS WILL BE LOST DURING REGENERATION! **********